@model SqlToExcelExporter.Models.ExportRequest

<div class="d-flex">
    <div class="flex-grow-1 p-3">
        <h2 class="mb-4 text-primary">📊 SQL Data Export to Excel</h2>

        <form asp-action="Index" method="post" onsubmit="showProgress()">
            <div class="mb-3">
                <label class="form-label fw-bold">Database Connection String</label>
                <input asp-for="ConnectionString" class="form-control w-75" required />
            </div>

            <div class="mb-3">
                <label class="form-label fw-bold">SQL Query</label>
                <textarea asp-for="SqlQuery" id="sqlQuery" rows="6" class="form-control w-75" required></textarea>
            </div>

            <div class="mb-3">
                <label class="form-label fw-bold">Query Name</label>
                <input type="text" id="queryName" class="form-control w-75" placeholder="Masalan: Top 100 Students" required />
            </div>

            <div class="mb-3">
                <label class="form-label fw-bold">Query Folder / Category</label>
                <input type="text" id="queryCategory" class="form-control w-75" placeholder="Masalan: Finance, HR, Reports" />
            </div>

            <div class="mb-3">
                <button type="button" class="btn btn-secondary" onclick="saveQuery()">💾 Save Query</button>
            </div>

            <div class="mb-3">
                <label class="form-label fw-bold">Excel File Name</label>
                <input asp-for="FileName" class="form-control w-50" placeholder="Masalan: Report_2025" required />
            </div>

            <button type="submit" class="btn btn-primary fw-bold px-4">🚀 Export to Excel</button>
        </form>

        <div id="progressBox" style="display:none; margin-top:20px;">
            <div class="progress" style="height:28px;">
                <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-animated bg-success"
                     role="progressbar" style="width: 0%">
                    0%
                </div>
            </div>
            <p id="progressText" class="mt-2 text-primary">⏳ Ma’lumotlar ko‘chirilmoqda...</p>
        </div>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="mt-3 alert alert-danger">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }
    </div>

    <div id="queriesPanel" class="border-start p-3 bg-light"
         style="width:300px; height:100vh; overflow-y:auto;">
        <h5 class="mb-3">📂 Saved Queries</h5>
        <ul id="queriesList" class="list-group"></ul>
    </div>
</div>

@section Scripts {
    <script>
        // 📥 Saqlangan querylarni yuklash (kategoriya bo‘yicha accordion bilan)
        async function loadQueries() {
            let res = await fetch('/Export/GetSavedQueries');
            let queries = await res.json();

            let list = document.getElementById("queriesList");
            list.innerHTML = "";

            if (queries.length === 0) {
                list.innerHTML = "<li class='list-group-item text-muted'>Hech qanday query saqlanmagan</li>";
                return;
            }

            let grouped = {};
            queries.forEach(q => {
                let cat = q.category || "📁 Boshqa";
                if (!grouped[cat]) grouped[cat] = [];
                grouped[cat].push(q);
            });

            Object.keys(grouped).forEach(category => {
                // 📂 Header (kategoriya bosilsa ichidagilar ko‘rinadi)
                let catHeader = document.createElement("li");
                catHeader.className = "list-group-item bg-primary text-white fw-bold";
                catHeader.style.cursor = "pointer";
                catHeader.innerHTML = `📁 ${category}`;

                let queryListDiv = document.createElement("div");
                queryListDiv.className = "ms-2 d-none"; // initially hidden

                catHeader.onclick = () => {
                    queryListDiv.classList.toggle("d-none");
                };

                list.appendChild(catHeader);
                list.appendChild(queryListDiv);

                grouped[category].forEach((q) => {
                    let li = document.createElement("li");
                    li.className = "list-group-item d-flex justify-content-between align-items-center";

                    let span = document.createElement("span");
                    span.innerHTML = `<strong>${q.name}</strong>`;
                    span.style.cursor = "pointer";
                    span.onclick = () => {
                        document.getElementById("sqlQuery").value = q.sql;
                        document.getElementById("queryName").value = q.name;
                        document.getElementById("queryCategory").value = q.category || "";
                        document.querySelectorAll("#queriesList li").forEach(x => x.classList.remove("active"));
                        li.classList.add("active");
                    };

                    let delBtn = document.createElement("button");
                    delBtn.className = "btn btn-sm btn-outline-danger";
                    delBtn.innerHTML = "❌";
                    delBtn.onclick = async e => {
                        e.stopPropagation();
                        if (!confirm("Ushbu queryni o‘chirishni xohlaysizmi?")) return;

                        await fetch('/Export/DeleteQuery', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ name: q.name, category: q.category })
                        });

                        loadQueries();
                    };

                    li.appendChild(span);
                    li.appendChild(delBtn);
                    queryListDiv.appendChild(li);
                });
            });
        }

        // 📥 Saqlash
        async function saveQuery() {
            let sql = document.getElementById("sqlQuery").value.trim();
            let name = document.getElementById("queryName").value.trim();
            let category = document.getElementById("queryCategory").value.trim();

            if (!sql) return alert("❌ SQL query yozilmagan!");
            if (!name) return alert("❌ Query nomini yozing!");

            await fetch('/Export/SaveQuery', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name: name, sql: sql, category: category })
            });

            document.getElementById("queryName").value = "";
            document.getElementById("queryCategory").value = "";
            loadQueries();
        }

        // 📊 Progress bar
        let progressTimer = null;
        async function pollProgress() {
            try {
                let res = await fetch('/Export/GetProgress');
                let data = await res.json();

                let bar = document.getElementById("progressBar");
                let txt = document.getElementById("progressText");

                if (data.done) {
                    clearTimeout(progressTimer);
                    txt.innerText = "✅ Eksport yakunlandi!";
                    bar.style.width = "100%";
                    bar.innerText = "100%";
                    bar.classList.remove("progress-bar-animated");
                    return;
                }

                let percent = data.total > 0 ? Math.floor((data.rows / data.total) * 100) : 0;
                bar.style.width = percent + "%";
                bar.innerText = percent + "%";
                txt.innerText = `⏳ ${data.rows.toLocaleString()} qator ko‘chirildi...`;

                progressTimer = setTimeout(pollProgress, 1000);
            } catch {
                clearTimeout(progressTimer);
            }
        }

        function showProgress() {
            document.getElementById("progressBox").style.display = "block";
            document.getElementById("progressText").innerText = "⏳ Ma’lumotlar tayyorlanmoqda...";
            let bar = document.getElementById("progressBar");
            bar.style.width = "0%";
            bar.innerText = "0%";
            bar.classList.add("progress-bar-animated");

            pollProgress();
        }

        document.addEventListener("DOMContentLoaded", loadQueries);
    </script>
}
